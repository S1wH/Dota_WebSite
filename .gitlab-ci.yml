# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:        
  - test
  - build
  - deploy


tests:
  stage: test
  image: python:3.10
  before_script:
    - python -m pip install --upgrade pip
    - pip install -r requirements.txt  
  script:
    - echo "Running django tests!"
    - python manage.py test
    - echo "All django tests passed!"
    - echo "Running pylint tests!"
    - pylint $(git ls-files '*.py')
    - echo "All pylint tests passed!"

build-job:

  stage: build
  image: docker/compose:latest
  variables:
    POSTGRES_USER: $POSTGRES_USER
    POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    POSTGRES_DB: $secrets.POSTGRES_DB
    POSTGRES_PORT: $POSTGRES_PORT
    SECRET_KEY: $SECRET_KEY
    DJANGO_PORT: $DJANGO_PORT
    NGINX_PORT: $NGINX_PORT
  before_script:
    - docker info
    - docker-compose --version
  script:
    - echo "Running build stage!"
    - docker-compose build
    - echo "Build was successfully complete!!"


deploy-job:
  stage: deploy
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
